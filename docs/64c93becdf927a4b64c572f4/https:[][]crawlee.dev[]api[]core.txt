@crawlee/core | API | Crawlee
Skip to main content

Crawlee
Crawlee
Docs
Examples
API
Changelog
3.5
Next
Next
3.5
3.5
3.4
3.4
3.3
3.3
3.2
3.2
3.1
3.1
3.0
3.0
2.2
2.2
1.3
1.3


GitHub
Discord
Search⌘K
Search
Search
⌘K

Crawlee
Crawlee
@crawlee/coreOverviewClassesEnumerationsFunctionsInterfacesType AliasesVariablesChangelog
@crawlee/core
Overview
Overview
Classes
Classes
Enumerations
Enumerations
Functions
Functions
Interfaces
Interfaces
Type Aliases
Type Aliases
Variables
Variables
Changelog
Changelog
@crawlee/cheerio
@crawlee/cheerio
@crawlee/jsdom
@crawlee/jsdom
@crawlee/playwright
@crawlee/playwright
@crawlee/puppeteer
@crawlee/puppeteer
@crawlee/basic
@crawlee/basic
@crawlee/http
@crawlee/http
@crawlee/browser
@crawlee/browser
@crawlee/memory-storage
@crawlee/memory-storage
@crawlee/browser-pool
@crawlee/browser-pool
@crawlee/utils
@crawlee/utils
@crawlee/types
@crawlee/types



@crawlee/core
@crawlee/core
Overview
Overview
Version: 3.5
On this page
@crawlee/core 

Core set of classes required for Crawlee.
The crawlee package consists of several smaller packages, released separately under @crawlee namespace:
crawlee
@crawlee/core: the base for all the crawler implementations, also contains things like Request, RequestQueue, RequestList or Dataset classes
@crawlee/core
@crawlee/cheerio: exports CheerioCrawler
@crawlee/cheerio
@crawlee/playwright: exports PlaywrightCrawler
@crawlee/playwright
@crawlee/puppeteer: exports PuppeteerCrawler
@crawlee/puppeteer
@crawlee/linkedom: exports LinkeDOMCrawler
@crawlee/linkedom
@crawlee/jsdom: exports JSDOMCrawler
@crawlee/jsdom
@crawlee/basic: exports BasicCrawler
@crawlee/basic
@crawlee/http: exports HttpCrawler (which is used for creating @crawlee/jsdom and @crawlee/cheerio)
@crawlee/http
@crawlee/jsdom
@crawlee/cheerio
@crawlee/browser: exports BrowserCrawler (which is used for creating @crawlee/playwright and @crawlee/puppeteer)
@crawlee/browser
@crawlee/playwright
@crawlee/puppeteer
@crawlee/memory-storage: @apify/storage-local alternative
@crawlee/memory-storage
@apify/storage-local
@crawlee/browser-pool: previously browser-pool package
@crawlee/browser-pool
browser-pool
@crawlee/utils: utility methods
@crawlee/utils
@crawlee/types: holds TS interfaces mainly about the StorageClient
@crawlee/types
StorageClient
Installing Crawlee​
​
Most of the Crawlee packages are extending and reexporting each other, so it's enough to install just the one you plan on using, e.g. @crawlee/playwright if you plan on using playwright - it already contains everything from the @crawlee/browser package, which includes everything from @crawlee/basic, which includes everything from @crawlee/core.
If we don't care much about additional code being pulled in, we can just use the crawlee meta-package, which contains (re-exports) most of the @crawlee/* packages, and therefore contains all the crawler classes.
npm install crawlee
npm
 
install
 crawlee


Or if all we need is cheerio support, we can install only @crawlee/cheerio.
npm install @crawlee/cheerio
npm
 
install
 @crawlee/cheerio


When using playwright or puppeteer, we still need to install those dependencies explicitly - this allows the users to be in control of which version will be used.
npm install crawlee playwright
npm
 
install
 crawlee playwright
# or npm install @crawlee/playwright playwright

# or npm install @crawlee/playwright playwright


Alternatively we can also use the crawlee meta-package which contains (re-exports) most of the @crawlee/* packages, and therefore contains all the crawler classes.
Sometimes you might want to use some utility methods from @crawlee/utils, so you might want to install that as well. This package contains some utilities that were previously available under Apify.utils. Browser related utilities can be also found in the crawler packages (e.g. @crawlee/playwright).
Sometimes you might want to use some utility methods from @crawlee/utils, so you might want to install that as well. This package contains some utilities that were previously available under Apify.utils. Browser related utilities can be also found in the crawler packages (e.g. @crawlee/playwright).
Index 



Classes
Configuration
Configuration

CriticalError
CriticalError

EventManager
EventManager

LocalEventManager
LocalEventManager

Log
Log

Logger
Logger

LoggerJson
LoggerJson

LoggerText
LoggerText

NonRetryableError
NonRetryableError

RetryRequestError
RetryRequestError

Router
Router

SessionError
SessionError

Crawlers
Statistics
Statistics

Result Stores
Dataset
Dataset

KeyValueStore
KeyValueStore

Scaling
AutoscaledPool
AutoscaledPool

ProxyConfiguration
ProxyConfiguration

Session
Session

SessionPool
SessionPool

Snapshotter
Snapshotter

SystemStatus
SystemStatus

Sources
PseudoUrl
PseudoUrl

Request
Request

RequestList
RequestList

RequestQueue
RequestQueue

Enumerations
EnqueueStrategy
EnqueueStrategy

EventType
EventType

LogLevel
LogLevel

RequestState
RequestState

Functions
enqueueLinks
enqueueLinks

filterRequestsByPatterns
filterRequestsByPatterns

purgeDefaultStorages
purgeDefaultStorages

tryAbsoluteURL
tryAbsoluteURL

useState
useState

Interfaces
AddRequestsBatchedOptions
AddRequestsBatchedOptions

AddRequestsBatchedResult
AddRequestsBatchedResult

AutoscaledPoolOptions
AutoscaledPoolOptions

ClientInfo
ClientInfo

ConfigurationOptions
ConfigurationOptions

Cookie
Cookie

CrawlingContext
CrawlingContext

CreateSession
CreateSession

DatasetConsumer
DatasetConsumer

DatasetContent
DatasetContent

DatasetDataOptions
DatasetDataOptions

DatasetIteratorOptions
DatasetIteratorOptions

DatasetMapper
DatasetMapper

DatasetOptions
DatasetOptions

DatasetReducer
DatasetReducer

EnqueueLinksOptions
EnqueueLinksOptions

ExportOptions
ExportOptions

FinalStatistics
FinalStatistics

IStorage
IStorage

KeyConsumer
KeyConsumer

KeyValueStoreIteratorOptions
KeyValueStoreIteratorOptions

KeyValueStoreOptions
KeyValueStoreOptions

LoggerOptions
LoggerOptions

ProxyConfigurationFunction
ProxyConfigurationFunction

ProxyConfigurationOptions
ProxyConfigurationOptions

ProxyInfo
ProxyInfo

PushErrorMessageOptions
PushErrorMessageOptions

QueueOperationInfo
QueueOperationInfo

RecordOptions
RecordOptions

RequestListOptions
RequestListOptions

RequestListState
RequestListState

RequestOptions
RequestOptions

RequestQueueOperationOptions
RequestQueueOperationOptions

RequestQueueOptions
RequestQueueOptions

RequestTransform
RequestTransform

RouterHandler
RouterHandler

SessionOptions
SessionOptions

SessionPoolOptions
SessionPoolOptions

SessionState
SessionState

SnapshotterOptions
SnapshotterOptions

StatisticPersistedState
StatisticPersistedState

StatisticState
StatisticState

StorageClient
StorageClient

StorageManagerOptions
StorageManagerOptions

SystemInfo
SystemInfo

SystemStatusOptions
SystemStatusOptions

UseStateOptions
UseStateOptions

Type Aliases
EventTypeName
EventTypeName

GetUserDataFromRequest
GetUserDataFromRequest

GlobInput
GlobInput

GlobObject
GlobObject

PseudoUrlInput
PseudoUrlInput

PseudoUrlObject
PseudoUrlObject

RegExpInput
RegExpInput

RegExpObject
RegExpObject

RequestListSourcesFunction
RequestListSourcesFunction

RouterRoutes
RouterRoutes

Source
Source

UrlPatternObject
UrlPatternObject

Variables
log
log

Type Aliases 



EventTypeName






: 
EventType
 | 
systemInfo
 | 
persistState
 | 
migrating
 | 
aborting
 | 
exit
GetUserDataFromRequest






<T>
<
>
: 
T
 extends 
Request
<
infer 
>
 ? 
Y
 : 
never
Type parameters
T
T
GlobInput






: 
string
 | 
GlobObject
GlobObject






: 
{ 
glob: string
: 
string
 }
 & 
Pick
<
RequestOptions
, 
method
 | 
payload
 | 
label
 | 
userData
 | 
headers
>
PseudoUrlInput






: 
string
 | 
PseudoUrlObject
PseudoUrlObject






: 
{ 
purl: string
: 
string
 }
 & 
Pick
<
RequestOptions
, 
method
 | 
payload
 | 
label
 | 
userData
 | 
headers
>
RegExpInput






: 
RegExp
 | 
RegExpObject
RegExpObject






: 
{ 
regexp: RegExp
: 
RegExp
 }
 & 
Pick
<
RequestOptions
, 
method
 | 
payload
 | 
label
 | 
userData
 | 
headers
>
RequestListSourcesFunction






: 
(
)
 => 
Promise
<
RequestListSource
[]
>
Type declaration
(): Promise<RequestListSource[]>Returns Promise<RequestListSource[]>
(): Promise<RequestListSource[]>

(
)
: 
Promise
<
RequestListSource
[]
>
Returns Promise<RequestListSource[]>
Returns Promise<RequestListSource[]>
Promise
<
RequestListSource
[]
>
RouterRoutes






<Context, UserData>
<
, 
>
: 
{ 
[ 
label
 in 
string
 | 
symbol
 ]
: 
(
ctx: Omit<Context, request> & { request: Request<UserData> }
: 
Omit
<
Context
, 
request
>
 & 
{ 
request: Request<UserData>
: 
Request
<
UserData
>
 }
)
 => 
Awaitable
<
void
>
 }
Type parameters
Context
Context
UserData: Dictionary
UserData
:
Dictionary
Source






: 
(
Partial
<
RequestOptions
>
 & 
{ 
regex?: RegExp
?: 
RegExp
; 
requestsFromUrl?: string
?: 
string
 }
)
 | 
Request
UrlPatternObject






: 
{ 
glob?: string
?: 
string
; 
regexp?: RegExp
?: 
RegExp
 }
 & 
Pick
<
RequestOptions
, 
method
 | 
payload
 | 
label
 | 
userData
 | 
headers
>
Variables 



externalconstlog





external
const

: 
Log
docusaurus-plugin-typedoc-api
TypeDoc
 EventTypeName
 EventTypeName

 GetUserDataFromRequest
 GetUserDataFromRequest

 GlobInput
 GlobInput

 GlobObject
 GlobObject

 PseudoUrlInput
 PseudoUrlInput

 PseudoUrlObject
 PseudoUrlObject

 RegExpInput
 RegExpInput

 RegExpObject
 RegExpObject

 RequestListSourcesFunction
 RequestListSourcesFunction

 RouterRoutes
 RouterRoutes

 Source
 Source

 UrlPatternObject
 UrlPatternObject

 log
 log

Guides
Guides
Examples
Examples
API reference
API reference
Upgrading to v3
Upgrading to v3
Discord
Discord
Stack Overflow
Stack Overflow
Twitter
Twitter
Apify Platform
Apify Platform
Docusaurus
Docusaurus
GitHub
GitHub
Crawlee is free and open source
Built by
Built by
